import React, { useState, useEffect } from 'react';
import './Task.css';

interface TaskProps {
  onRewardClaimed: () => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã
}

const Task: React.FC<TaskProps> = ({ onRewardClaimed }) => {
  const [hasClaimedReward, setHasClaimedReward] = useState<boolean>(false); 
  const [hasVisitedGroup, setHasVisitedGroup] = useState<boolean>(false); 

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ localStorage –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const claimed = localStorage.getItem('taskRewardClaimed');
    const visited = localStorage.getItem('taskGroupVisited');
    if (claimed === 'true') setHasClaimedReward(true);
    if (visited === 'true') setHasVisitedGroup(true);
  }, []);

  const handleGoToGroup = () => {
    window.open('https://t.me/+wC_j77d7MXNjYmZi', '_blank');
    setHasVisitedGroup(true);
    localStorage.setItem('taskGroupVisited', 'true'); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
  };

  const handleClaimReward = () => {
    if (!hasClaimedReward && hasVisitedGroup) {
      setHasClaimedReward(true);
      localStorage.setItem('taskRewardClaimed', 'true'); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      onRewardClaimed(); // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã
    }
  };

  return (
    <div className="task-container">
      <h2>–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ Telegram</h2>

      <p className="reward-text">üèÜ –ù–∞–≥—Ä–∞–¥–∞: 2500 –º–æ–Ω–µ—Ç</p>

      {!hasVisitedGroup && (
        <button onClick={handleGoToGroup} className="task-button">
          –ü–µ—Ä–µ–π—Ç–∏
        </button>
      )}

      {hasVisitedGroup && !hasClaimedReward && (
        <button onClick={handleClaimReward} className="task-button">
          –ó–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É
        </button>
      )}

      {hasClaimedReward && <p className="reward-received">–ù–∞–≥—Ä–∞–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞! üéâ</p>}
    </div>
  );
};

export default Task;
